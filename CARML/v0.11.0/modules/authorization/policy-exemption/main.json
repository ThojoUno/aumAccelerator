{
  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.22.6.54827",
      "templateHash": "5596643679633132129"
    },
    "name": "Policy Exemptions (All scopes)",
    "description": "This module deploys a Policy Exemption at a Management Group, Subscription or Resource Group scope.",
    "owner": "Azure/module-maintainers"
  },
  "parameters": {
    "name": {
      "type": "string",
      "maxLength": 64,
      "metadata": {
        "description": "Required. Specifies the name of the policy exemption. Maximum length is 64 characters for management group, subscription and resource group scopes."
      }
    },
    "displayName": {
      "type": "string",
      "defaultValue": "",
      "maxLength": 128,
      "metadata": {
        "description": "Optional. The display name of the policy exemption. Maximum length is 128 characters."
      }
    },
    "description": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Optional. The description of the policy exemption."
      }
    },
    "metadata": {
      "type": "object",
      "defaultValue": {},
      "metadata": {
        "description": "Optional. The policy exemption metadata. Metadata is an open ended object and is typically a collection of key-value pairs."
      }
    },
    "exemptionCategory": {
      "type": "string",
      "defaultValue": "Mitigated",
      "allowedValues": [
        "Mitigated",
        "Waiver"
      ],
      "metadata": {
        "description": "Optional. The policy exemption category. Possible values are Waiver and Mitigated. Default is Mitigated."
      }
    },
    "policyAssignmentId": {
      "type": "string",
      "metadata": {
        "description": "Required. The resource ID of the policy assignment that is being exempted."
      }
    },
    "policyDefinitionReferenceIds": {
      "type": "array",
      "defaultValue": [],
      "metadata": {
        "description": "Optional. The policy definition reference ID list when the associated policy assignment is an assignment of a policy set definition."
      }
    },
    "expiresOn": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Optional. The expiration date and time (in UTC ISO 8601 format yyyy-MM-ddTHH:mm:ssZ) of the policy exemption. e.g. 2021-10-02T03:57:00.000Z."
      }
    },
    "managementGroupId": {
      "type": "string",
      "defaultValue": "[managementGroup().name]",
      "metadata": {
        "description": "Optional. The group ID of the management group to be exempted from the policy assignment. If not provided, will use the current scope for deployment."
      }
    },
    "subscriptionId": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Optional. The subscription ID of the subscription to be exempted from the policy assignment. Cannot use with management group ID parameter."
      }
    },
    "resourceGroupName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Optional. The name of the resource group to be exempted from the policy assignment. Must also use the subscription ID parameter."
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[deployment().location]",
      "metadata": {
        "description": "Optional. Location deployment metadata."
      }
    },
    "assignmentScopeValidation": {
      "type": "string",
      "defaultValue": "",
      "allowedValues": [
        "",
        "Default",
        "DoNotValidate"
      ],
      "metadata": {
        "description": "Optional. The option whether validate the exemption is at or under the assignment scope."
      }
    },
    "resourceSelectors": {
      "type": "array",
      "defaultValue": [],
      "metadata": {
        "description": "Optional. The resource selector list to filter policies by resource properties."
      }
    },
    "enableDefaultTelemetry": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Optional. Enable telemetry via a Globally Unique Identifier (GUID)."
      }
    }
  },
  "variables": {
    "enableReferencedModulesTelemetry": false
  },
  "resources": [
    {
      "condition": "[parameters('enableDefaultTelemetry')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2021-04-01",
      "name": "[format('pid-47ed15a6-730a-4827-bcb4-0fd963ffbd82-{0}', uniqueString(deployment().name, parameters('location')))]",
      "location": "[parameters('location')]",
      "properties": {
        "mode": "Incremental",
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "resources": []
        }
      }
    },
    {
      "condition": "[and(empty(parameters('subscriptionId')), empty(parameters('resourceGroupName')))]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('{0}-PolicyExemption-MG-Module', uniqueString(deployment().name, parameters('location')))]",
      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('managementGroupId'))]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "name": {
            "value": "[parameters('name')]"
          },
          "displayName": {
            "value": "[parameters('displayName')]"
          },
          "description": {
            "value": "[parameters('description')]"
          },
          "metadata": {
            "value": "[parameters('metadata')]"
          },
          "exemptionCategory": {
            "value": "[parameters('exemptionCategory')]"
          },
          "policyAssignmentId": {
            "value": "[parameters('policyAssignmentId')]"
          },
          "policyDefinitionReferenceIds": {
            "value": "[parameters('policyDefinitionReferenceIds')]"
          },
          "expiresOn": {
            "value": "[parameters('expiresOn')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "assignmentScopeValidation": {
            "value": "[parameters('assignmentScopeValidation')]"
          },
          "resourceSelectors": {
            "value": "[parameters('resourceSelectors')]"
          },
          "enableDefaultTelemetry": {
            "value": "[variables('enableReferencedModulesTelemetry')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.22.6.54827",
              "templateHash": "5606667569084267633"
            },
            "name": "Policy Exemptions (Management Group scope)",
            "description": "This module deploys a Policy Exemption at a Management Group scope.",
            "owner": "Azure/module-maintainers"
          },
          "parameters": {
            "name": {
              "type": "string",
              "maxLength": 64,
              "metadata": {
                "description": "Required. Specifies the name of the policy exemption. Maximum length is 64 characters for management group scope."
              }
            },
            "displayName": {
              "type": "string",
              "defaultValue": "",
              "maxLength": 128,
              "metadata": {
                "description": "Optional. The display name of the policy assignment. Maximum length is 128 characters."
              }
            },
            "description": {
              "type": "string",
              "defaultValue": "",
              "metadata": {
                "description": "Optional. The description of the policy exemption."
              }
            },
            "metadata": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Optional. The policy exemption metadata. Metadata is an open ended object and is typically a collection of key-value pairs."
              }
            },
            "exemptionCategory": {
              "type": "string",
              "defaultValue": "Mitigated",
              "allowedValues": [
                "Mitigated",
                "Waiver"
              ],
              "metadata": {
                "description": "Optional. The policy exemption category. Possible values are Waiver and Mitigated. Default is Mitigated."
              }
            },
            "policyAssignmentId": {
              "type": "string",
              "metadata": {
                "description": "Required. The resource ID of the policy assignment that is being exempted."
              }
            },
            "policyDefinitionReferenceIds": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Optional. The policy definition reference ID list when the associated policy assignment is an assignment of a policy set definition."
              }
            },
            "expiresOn": {
              "type": "string",
              "defaultValue": "",
              "metadata": {
                "description": "Optional. The expiration date and time (in UTC ISO 8601 format yyyy-MM-ddTHH:mm:ssZ) of the policy exemption. e.g. 2021-10-02T03:57:00.000Z."
              }
            },
            "location": {
              "type": "string",
              "defaultValue": "[deployment().location]",
              "metadata": {
                "description": "Optional. Location deployment metadata."
              }
            },
            "assignmentScopeValidation": {
              "type": "string",
              "defaultValue": "",
              "allowedValues": [
                "",
                "Default",
                "DoNotValidate"
              ],
              "metadata": {
                "description": "Optional. The option whether validate the exemption is at or under the assignment scope."
              }
            },
            "resourceSelectors": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Optional. The resource selector list to filter policies by resource properties."
              }
            },
            "enableDefaultTelemetry": {
              "type": "bool",
              "defaultValue": true,
              "metadata": {
                "description": "Optional. Enable telemetry via a Globally Unique Identifier (GUID)."
              }
            }
          },
          "resources": [
            {
              "condition": "[parameters('enableDefaultTelemetry')]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2021-04-01",
              "name": "[format('pid-47ed15a6-730a-4827-bcb4-0fd963ffbd82-{0}', uniqueString(deployment().name, parameters('location')))]",
              "location": "[parameters('location')]",
              "properties": {
                "mode": "Incremental",
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "resources": []
                }
              }
            },
            {
              "type": "Microsoft.Authorization/policyExemptions",
              "apiVersion": "2022-07-01-preview",
              "name": "[parameters('name')]",
              "properties": {
                "displayName": "[if(not(empty(parameters('displayName'))), parameters('displayName'), null())]",
                "description": "[if(not(empty(parameters('description'))), parameters('description'), null())]",
                "metadata": "[if(not(empty(parameters('metadata'))), parameters('metadata'), null())]",
                "exemptionCategory": "[parameters('exemptionCategory')]",
                "policyAssignmentId": "[parameters('policyAssignmentId')]",
                "policyDefinitionReferenceIds": "[if(not(empty(parameters('policyDefinitionReferenceIds'))), parameters('policyDefinitionReferenceIds'), createArray())]",
                "expiresOn": "[if(not(empty(parameters('expiresOn'))), parameters('expiresOn'), null())]",
                "assignmentScopeValidation": "[if(not(empty(parameters('assignmentScopeValidation'))), parameters('assignmentScopeValidation'), null())]",
                "resourceSelectors": "[parameters('resourceSelectors')]"
              }
            }
          ],
          "outputs": {
            "name": {
              "type": "string",
              "metadata": {
                "description": "Policy Exemption Name."
              },
              "value": "[parameters('name')]"
            },
            "resourceId": {
              "type": "string",
              "metadata": {
                "description": "Policy Exemption resource ID."
              },
              "value": "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyExemptions', parameters('name'))]"
            },
            "scope": {
              "type": "string",
              "metadata": {
                "description": "Policy Exemption Scope."
              },
              "value": "[managementGroup().id]"
            }
          }
        }
      }
    },
    {
      "condition": "[and(not(empty(parameters('subscriptionId'))), empty(parameters('resourceGroupName')))]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('{0}-PolicyExemption-Sub-Module', uniqueString(deployment().name, parameters('location')))]",
      "subscriptionId": "[parameters('subscriptionId')]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "name": {
            "value": "[parameters('name')]"
          },
          "displayName": {
            "value": "[parameters('displayName')]"
          },
          "description": {
            "value": "[parameters('description')]"
          },
          "metadata": {
            "value": "[parameters('metadata')]"
          },
          "exemptionCategory": {
            "value": "[parameters('exemptionCategory')]"
          },
          "policyAssignmentId": {
            "value": "[parameters('policyAssignmentId')]"
          },
          "policyDefinitionReferenceIds": {
            "value": "[parameters('policyDefinitionReferenceIds')]"
          },
          "expiresOn": {
            "value": "[parameters('expiresOn')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "enableDefaultTelemetry": {
            "value": "[variables('enableReferencedModulesTelemetry')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.22.6.54827",
              "templateHash": "10613705515536903891"
            },
            "name": "Policy Exemptions (Subscription scope)",
            "description": "This module deploys a Policy Exemption at a Subscription scope.",
            "owner": "Azure/module-maintainers"
          },
          "parameters": {
            "name": {
              "type": "string",
              "maxLength": 64,
              "metadata": {
                "description": "Required. Specifies the name of the policy exemption. Maximum length is 64 characters for subscription scope."
              }
            },
            "displayName": {
              "type": "string",
              "defaultValue": "",
              "maxLength": 128,
              "metadata": {
                "description": "Optional. The display name of the policy exemption. Maximum length is 128 characters."
              }
            },
            "description": {
              "type": "string",
              "defaultValue": "",
              "metadata": {
                "description": "Optional. The description of the policy exemption."
              }
            },
            "metadata": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Optional. The policy exemption metadata. Metadata is an open ended object and is typically a collection of key-value pairs."
              }
            },
            "exemptionCategory": {
              "type": "string",
              "defaultValue": "Mitigated",
              "allowedValues": [
                "Mitigated",
                "Waiver"
              ],
              "metadata": {
                "description": "Optional. The policy exemption category. Possible values are Waiver and Mitigated. Default is Mitigated."
              }
            },
            "policyAssignmentId": {
              "type": "string",
              "metadata": {
                "description": "Required. The resource ID of the policy assignment that is being exempted."
              }
            },
            "policyDefinitionReferenceIds": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Optional. The policy definition reference ID list when the associated policy assignment is an assignment of a policy set definition."
              }
            },
            "expiresOn": {
              "type": "string",
              "defaultValue": "",
              "metadata": {
                "description": "Optional. The expiration date and time (in UTC ISO 8601 format yyyy-MM-ddTHH:mm:ssZ) of the policy exemption. e.g. 2021-10-02T03:57:00.000Z."
              }
            },
            "location": {
              "type": "string",
              "defaultValue": "[deployment().location]",
              "metadata": {
                "description": "Optional. Location deployment metadata."
              }
            },
            "assignmentScopeValidation": {
              "type": "string",
              "defaultValue": "",
              "allowedValues": [
                "",
                "Default",
                "DoNotValidate"
              ],
              "metadata": {
                "description": "Optional. The option whether validate the exemption is at or under the assignment scope."
              }
            },
            "resourceSelectors": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Optional. The resource selector list to filter policies by resource properties."
              }
            },
            "enableDefaultTelemetry": {
              "type": "bool",
              "defaultValue": true,
              "metadata": {
                "description": "Optional. Enable telemetry via a Globally Unique Identifier (GUID)."
              }
            }
          },
          "resources": [
            {
              "condition": "[parameters('enableDefaultTelemetry')]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2021-04-01",
              "name": "[format('pid-47ed15a6-730a-4827-bcb4-0fd963ffbd82-{0}', uniqueString(deployment().name, parameters('location')))]",
              "location": "[parameters('location')]",
              "properties": {
                "mode": "Incremental",
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "resources": []
                }
              }
            },
            {
              "type": "Microsoft.Authorization/policyExemptions",
              "apiVersion": "2022-07-01-preview",
              "name": "[parameters('name')]",
              "properties": {
                "displayName": "[if(not(empty(parameters('displayName'))), parameters('displayName'), null())]",
                "description": "[if(not(empty(parameters('description'))), parameters('description'), null())]",
                "metadata": "[if(not(empty(parameters('metadata'))), parameters('metadata'), null())]",
                "exemptionCategory": "[parameters('exemptionCategory')]",
                "policyAssignmentId": "[parameters('policyAssignmentId')]",
                "policyDefinitionReferenceIds": "[if(not(empty(parameters('policyDefinitionReferenceIds'))), parameters('policyDefinitionReferenceIds'), createArray())]",
                "expiresOn": "[if(not(empty(parameters('expiresOn'))), parameters('expiresOn'), null())]",
                "assignmentScopeValidation": "[if(not(empty(parameters('assignmentScopeValidation'))), parameters('assignmentScopeValidation'), null())]",
                "resourceSelectors": "[parameters('resourceSelectors')]"
              }
            }
          ],
          "outputs": {
            "name": {
              "type": "string",
              "metadata": {
                "description": "Policy Exemption Name."
              },
              "value": "[parameters('name')]"
            },
            "resourceId": {
              "type": "string",
              "metadata": {
                "description": "Policy Exemption resource ID."
              },
              "value": "[subscriptionResourceId('Microsoft.Authorization/policyExemptions', parameters('name'))]"
            },
            "scope": {
              "type": "string",
              "metadata": {
                "description": "Policy Exemption Scope."
              },
              "value": "[subscription().id]"
            }
          }
        }
      }
    },
    {
      "condition": "[and(not(empty(parameters('resourceGroupName'))), not(empty(parameters('subscriptionId'))))]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('{0}-PolicyExemption-RG-Module', uniqueString(deployment().name, parameters('location')))]",
      "subscriptionId": "[parameters('subscriptionId')]",
      "resourceGroup": "[parameters('resourceGroupName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "name": {
            "value": "[parameters('name')]"
          },
          "displayName": {
            "value": "[parameters('displayName')]"
          },
          "description": {
            "value": "[parameters('description')]"
          },
          "metadata": {
            "value": "[parameters('metadata')]"
          },
          "exemptionCategory": {
            "value": "[parameters('exemptionCategory')]"
          },
          "policyAssignmentId": {
            "value": "[parameters('policyAssignmentId')]"
          },
          "policyDefinitionReferenceIds": {
            "value": "[parameters('policyDefinitionReferenceIds')]"
          },
          "expiresOn": {
            "value": "[parameters('expiresOn')]"
          },
          "enableDefaultTelemetry": {
            "value": "[variables('enableReferencedModulesTelemetry')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.22.6.54827",
              "templateHash": "17689607806582642174"
            },
            "name": "Policy Exemptions (Resource Group scope)",
            "description": "This module deploys a Policy Exemption at a Resource Group scope.",
            "owner": "Azure/module-maintainers"
          },
          "parameters": {
            "name": {
              "type": "string",
              "maxLength": 64,
              "metadata": {
                "description": "Required. Specifies the name of the policy exemption. Maximum length is 64 characters for resource group scope."
              }
            },
            "displayName": {
              "type": "string",
              "defaultValue": "",
              "maxLength": 128,
              "metadata": {
                "description": "Optional. The display name of the policy exemption. Maximum length is 128 characters."
              }
            },
            "description": {
              "type": "string",
              "defaultValue": "",
              "metadata": {
                "description": "Optional. The description of the policy exemption."
              }
            },
            "metadata": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Optional. The policy exemption metadata. Metadata is an open ended object and is typically a collection of key-value pairs."
              }
            },
            "exemptionCategory": {
              "type": "string",
              "defaultValue": "Mitigated",
              "allowedValues": [
                "Mitigated",
                "Waiver"
              ],
              "metadata": {
                "description": "Optional. The policy exemption category. Possible values are Waiver and Mitigated. Default is Mitigated."
              }
            },
            "policyAssignmentId": {
              "type": "string",
              "metadata": {
                "description": "Required. The resource ID of the policy assignment that is being exempted."
              }
            },
            "policyDefinitionReferenceIds": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Optional. The policy definition reference ID list when the associated policy assignment is an assignment of a policy set definition."
              }
            },
            "expiresOn": {
              "type": "string",
              "defaultValue": "",
              "metadata": {
                "description": "Optional. The expiration date and time (in UTC ISO 8601 format yyyy-MM-ddTHH:mm:ssZ) of the policy exemption. e.g. 2021-10-02T03:57:00.000Z."
              }
            },
            "assignmentScopeValidation": {
              "type": "string",
              "defaultValue": "",
              "allowedValues": [
                "",
                "Default",
                "DoNotValidate"
              ],
              "metadata": {
                "description": "Optional. The option whether validate the exemption is at or under the assignment scope."
              }
            },
            "resourceSelectors": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Optional. The resource selector list to filter policies by resource properties."
              }
            },
            "enableDefaultTelemetry": {
              "type": "bool",
              "defaultValue": true,
              "metadata": {
                "description": "Optional. Enable telemetry via a Globally Unique Identifier (GUID)."
              }
            }
          },
          "resources": [
            {
              "condition": "[parameters('enableDefaultTelemetry')]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2021-04-01",
              "name": "[format('pid-47ed15a6-730a-4827-bcb4-0fd963ffbd82-{0}', uniqueString(deployment().name))]",
              "properties": {
                "mode": "Incremental",
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "resources": []
                }
              }
            },
            {
              "type": "Microsoft.Authorization/policyExemptions",
              "apiVersion": "2022-07-01-preview",
              "name": "[parameters('name')]",
              "properties": {
                "displayName": "[if(not(empty(parameters('displayName'))), parameters('displayName'), null())]",
                "description": "[if(not(empty(parameters('description'))), parameters('description'), null())]",
                "metadata": "[if(not(empty(parameters('metadata'))), parameters('metadata'), null())]",
                "exemptionCategory": "[parameters('exemptionCategory')]",
                "policyAssignmentId": "[parameters('policyAssignmentId')]",
                "policyDefinitionReferenceIds": "[if(not(empty(parameters('policyDefinitionReferenceIds'))), parameters('policyDefinitionReferenceIds'), createArray())]",
                "expiresOn": "[if(not(empty(parameters('expiresOn'))), parameters('expiresOn'), null())]",
                "assignmentScopeValidation": "[if(not(empty(parameters('assignmentScopeValidation'))), parameters('assignmentScopeValidation'), null())]",
                "resourceSelectors": "[parameters('resourceSelectors')]"
              }
            }
          ],
          "outputs": {
            "name": {
              "type": "string",
              "metadata": {
                "description": "Policy Exemption Name."
              },
              "value": "[parameters('name')]"
            },
            "resourceId": {
              "type": "string",
              "metadata": {
                "description": "Policy Exemption resource ID."
              },
              "value": "[resourceId('Microsoft.Authorization/policyExemptions', parameters('name'))]"
            },
            "scope": {
              "type": "string",
              "metadata": {
                "description": "Policy Exemption Scope."
              },
              "value": "[resourceGroup().id]"
            },
            "resourceGroupName": {
              "type": "string",
              "metadata": {
                "description": "The name of the resource group the policy exemption was applied at."
              },
              "value": "[resourceGroup().name]"
            }
          }
        }
      }
    }
  ],
  "outputs": {
    "name": {
      "type": "string",
      "metadata": {
        "description": "Policy Exemption Name."
      },
      "value": "[if(and(empty(parameters('subscriptionId')), empty(parameters('resourceGroupName'))), reference(extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('managementGroupId')), 'Microsoft.Resources/deployments', format('{0}-PolicyExemption-MG-Module', uniqueString(deployment().name, parameters('location')))), '2022-09-01').outputs.name.value, if(and(not(empty(parameters('subscriptionId'))), empty(parameters('resourceGroupName'))), reference(subscriptionResourceId(parameters('subscriptionId'), 'Microsoft.Resources/deployments', format('{0}-PolicyExemption-Sub-Module', uniqueString(deployment().name, parameters('location')))), '2022-09-01').outputs.name.value, reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', format('{0}-PolicyExemption-RG-Module', uniqueString(deployment().name, parameters('location')))), '2022-09-01').outputs.name.value))]"
    },
    "resourceId": {
      "type": "string",
      "metadata": {
        "description": "Policy Exemption resource ID."
      },
      "value": "[if(and(empty(parameters('subscriptionId')), empty(parameters('resourceGroupName'))), reference(extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('managementGroupId')), 'Microsoft.Resources/deployments', format('{0}-PolicyExemption-MG-Module', uniqueString(deployment().name, parameters('location')))), '2022-09-01').outputs.resourceId.value, if(and(not(empty(parameters('subscriptionId'))), empty(parameters('resourceGroupName'))), reference(subscriptionResourceId(parameters('subscriptionId'), 'Microsoft.Resources/deployments', format('{0}-PolicyExemption-Sub-Module', uniqueString(deployment().name, parameters('location')))), '2022-09-01').outputs.resourceId.value, reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', format('{0}-PolicyExemption-RG-Module', uniqueString(deployment().name, parameters('location')))), '2022-09-01').outputs.resourceId.value))]"
    },
    "scope": {
      "type": "string",
      "metadata": {
        "description": "Policy Exemption Scope."
      },
      "value": "[if(and(empty(parameters('subscriptionId')), empty(parameters('resourceGroupName'))), reference(extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('managementGroupId')), 'Microsoft.Resources/deployments', format('{0}-PolicyExemption-MG-Module', uniqueString(deployment().name, parameters('location')))), '2022-09-01').outputs.scope.value, if(and(not(empty(parameters('subscriptionId'))), empty(parameters('resourceGroupName'))), reference(subscriptionResourceId(parameters('subscriptionId'), 'Microsoft.Resources/deployments', format('{0}-PolicyExemption-Sub-Module', uniqueString(deployment().name, parameters('location')))), '2022-09-01').outputs.scope.value, reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('subscriptionId'), parameters('resourceGroupName')), 'Microsoft.Resources/deployments', format('{0}-PolicyExemption-RG-Module', uniqueString(deployment().name, parameters('location')))), '2022-09-01').outputs.scope.value))]"
    }
  }
}